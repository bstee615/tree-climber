code="""\
int factorial() {
    int a = 1;
    int b = 10;
    for (int i = 2; i <= b; i ++) {
        a *= i;
    }
    return a;
}
"""

[expect]
graph="""\
digraph CFG {
    entry_factorial [type="ENTRY", label="factorial"]
    exit_factorial [type="EXIT", label="factorial"]
    statement_int_a_eq_1 [type="STATEMENT", label="int a = 1;"]
    statement_int_b_eq_10 [type="STATEMENT", label="int b = 10;"]
    statement_int_i_eq_2 [type="STATEMENT", label="int i = 2;"]
    loop_header_i_lteq_b [type="LOOP_HEADER", label="i <= b"]
    statement_i_plusplus [type="STATEMENT", label="i ++"]
    statement_a_multeq_i [type="STATEMENT", label="a *= i;"]
    return_return_a [type="RETURN", label="return a;"]

    entry_factorial -> statement_int_a_eq_1
    statement_int_a_eq_1 -> statement_int_b_eq_10
    statement_int_b_eq_10 -> statement_int_i_eq_2
    statement_int_i_eq_2 -> loop_header_i_lteq_b
    loop_header_i_lteq_b -> statement_a_multeq_i [label="true"]
    loop_header_i_lteq_b -> return_return_a [label="false"]
    statement_i_plusplus -> loop_header_i_lteq_b
    statement_a_multeq_i -> statement_i_plusplus
    return_return_a -> exit_factorial
}
"""
